let s:colors = ["#9CD8F7", "#F5FA1D", "#F97C65", "#35D27F", "#EB75D6", "#E5D180", "#8997F5", "#D49DA5", "#7FEC35", "#F6B223", "#B4F1C3", "#99B730", "#F67C1B", "#3AC6BE", "#EAAFF1", "#DE9A4E", "#BBEA87", "#EEF06D", "#8FB272", "#EAA481", "#F58AAE", "#80B09B", "#5DE866", "#B5A5C5", "#88ADE6", "#4DAABD", "#EDD528", "#FA6BB2", "#47F2D4", "#F47F86", "#2ED8FF", "#B8E01C", "#C5A127", "#74BB46", "#D386F1", "#97DFD6", "#B1A96F", "#66BB75", "#97AA49", "#EF874A", "#48EDF0", "#C0AE50", "#89AAB6", "#D7D1EB", "#5EB894", "#57F0AC", "#B5AF1B", "#B7A5F0", "#8BE289", "#D38AC6", "#C8EE63", "#ED9C36", "#85BA5F", "#9DEA74", "#85C52D", "#40B7E5", "#EEA3C2", "#7CE9B6", "#8CEC58", "#D8A66C", "#51C03B", "#C4CE64", "#45E648", "#4DC15E", "#63A5F3", "#EA8C66", "#D2D43E", "#E5BCE8", "#E4B7CB", "#B092F4", "#44C58C", "#D1E998", "#76E4F2", "#E19392", "#A8E5A4", "#BF9FD6", "#E8C25B", "#58F596", "#6BAEAC", "#94C291", "#7EF1DB", "#E8D65C", "#A7EA38", "#D38AE0", "#ECF453", "#5CD8B8", "#B6BF6B", "#BEE1F1", "#B1D43E", "#EBE77B", "#84A5CD", "#CFEF7A", "#A3C557", "#E4BB34", "#ECB151", "#BDC9F2", "#5EB0E9", "#E09764", "#9BE3C8", "#B3ADDC", "#B2AC36", "#C8CD4F", "#C797AF", "#DCDB26", "#BCA85E", "#E495A5", "#F37DB8", "#70C0B1", "#5AED7D", "#E49482", "#8AA1F0", "#B3EDEE", "#DAEE34", "#EBD646", "#ECA2D2", "#A0A7E6", "#3EBFD3", "#C098BF", "#F1882E", "#77BFDF", "#7FBFC7", "#D4951F", "#A5C0D0", "#B892DE", "#F8CB31", "#75D0D9", "#A6A0B4", "#EA98E4", "#F38BE6", "#DC83A4"]

if (exists('g:semanticGUIColors'))
	let s:colors = g:semanticGUIColors
endif

function! semhl#config#colors()
  return s:colors
endfunction


let s:blacklist= {
\ 'javascript': {
    \ 'await': 1,
    \ 'bind': 1,
    \ 'break': 1,
    \ 'case': 1,
    \ 'catch': 1,
    \ 'class': 1,
    \ 'console': 1,
    \ 'const': 1,
    \ 'constructor': 1,
    \ 'continue': 1,
    \ 'debugger': 1,
    \ 'default': 1,
    \ 'delete': 1,
    \ 'do': 1,
    \ 'else': 1,
    \ 'enum': 1,
    \ 'export': 1,
    \ 'extends': 1,
    \ 'false': 1,
    \ 'finally': 1,
    \ 'for': 1,
    \ 'from': 1,
    \ 'function': 1,
    \ 'if': 1,
    \ 'implements': 1,
    \ 'import': 1,
    \ 'in': 1,
    \ 'instanceof': 1,
    \ 'interface': 1,
    \ 'let': 1,
    \ 'log': 1,
    \ 'new': 1,
    \ 'null': 1,
    \ 'package': 1,
    \ 'private': 1,
    \ 'props': 1,
    \ 'protected': 1,
    \ 'public': 1,
    \ 'render': 1,
    \ 'require': 1,
    \ 'return': 1,
    \ 'state': 1,
    \ 'static': 1,
    \ 'super': 1,
    \ 'switch': 1,
    \ 'this': 1,
    \ 'throw': 1,
    \ 'true': 1,
    \ 'try': 1,
    \ 'typeof': 1,
    \ 'var': 1,
    \ 'void': 1,
    \ 'while': 1,
    \ 'window': 1,
    \ 'with': 1,
  \ },
 \ 'typescript': {
     \	'Array': 1,
     \	'Object': 1,
     \	'any': 1,
     \	'await': 1,
     \	'boolean': 1,
     \	'break': 1,
     \	'case': 1,
     \	'catch': 1,
     \	'class': 1,
     \	'const': 1,
     \	'continue': 1,
     \	'debugger': 1,
     \	'default': 1,
     \	'delete': 1,
     \	'do': 1,
     \	'else': 1,
     \	'enum': 1,
     \	'export': 1,
     \	'extends': 1,
     \	'false': 1,
     \	'finally': 1,
     \	'for': 1,
     \	'function': 1,
     \	'if': 1,
     \	'implements': 1,
     \	'import': 1,
     \	'in': 1,
     \	'instanceof': 1,
     \	'interface': 1,
     \	'let': 1,
     \	'module': 1,
     \	'new': 1,
     \	'null': 1,
     \	'number': 1,
     \	'package': 1,
     \	'private': 1,
     \	'protected': 1,
     \	'public': 1,
     \	'return': 1,
     \	'static': 1,
     \	'string': 1,
     \	'super': 1,
     \	'switch': 1,
     \	'this': 1,
     \	'throw': 1,
     \	'true': 1,
     \	'try': 1,
     \	'typeof': 1,
     \	'var': 1,
     \	'void': 1,
     \	'while': 1,
     \	'with': 1,
 	\ },
 \ 'ruby': {
     \	'?': 1,
     \	'BEGIN': 1,
     \	'END': 1,
     \	'__FILE__': 1,
     \	'__LINE__': 1,
     \	'alias': 1,
     \	'and': 1,
     \	'begin': 1,
     \	'break': 1,
     \	'case': 1,
     \	'class': 1,
     \	'def': 1,
     \	'defined': 1,
     \	'do': 1,
     \	'else': 1,
     \	'elsif': 1,
     \	'end': 1,
     \	'ensure': 1,
     \	'false': 1,
     \	'for': 1,
     \	'if': 1,
     \	'in': 1,
     \	'module': 1,
     \	'next': 1,
     \	'nil': 1,
     \	'not': 1,
     \	'or': 1,
     \	'redo': 1,
     \	'rescue': 1,
     \	'retry': 1,
     \	'return': 1,
     \	'self': 1,
     \	'super': 1,
     \	'then': 1,
     \	'true': 1,
     \	'undef': 1,
     \	'unless': 1,
     \	'until': 1,
     \	'when': 1,
 	\ },
 \ 'php': {
     \	'__CLASS__': 1,
     \	'__DIR__': 1,
     \	'__FILE__': 1,
     \	'__FUNCTION__': 1,
     \	'__LINE__': 1,
     \	'__METHOD__': 1,
     \	'__NAMESPACE__': 1,
     \	'__TRAIT__': 1,
     \	'__halt_compiler': 1,
     \	'abstract': 1,
     \	'and': 1,
     \	'array': 1,
     \	'as': 1,
     \	'break': 1,
     \	'callable': 1,
     \	'case': 1,
     \	'catch': 1,
     \	'class': 1,
     \	'clone': 1,
     \	'const': 1,
     \	'continue': 1,
     \	'declare': 1,
     \	'default': 1,
     \	'die': 1,
     \	'do': 1,
     \	'echo': 1,
     \	'else': 1,
     \	'elseif': 1,
     \	'empty': 1,
     \	'enddeclare': 1,
     \	'endfor': 1,
     \	'endforeach': 1,
     \	'endif': 1,
     \	'endswitch': 1,
     \	'endwhile': 1,
     \	'eval': 1,
     \	'exit': 1,
     \	'extends': 1,
     \	'final': 1,
     \	'for': 1,
     \	'foreach': 1,
     \	'function': 1,
     \	'global': 1,
     \	'goto': 1,
     \	'if': 1,
     \	'implements': 1,
     \	'include': 1,
     \	'include_once': 1,
     \	'instanceof': 1,
     \	'insteadof': 1,
     \	'interface': 1,
     \	'isset': 1,
     \	'list': 1,
     \	'namespace': 1,
     \	'new': 1,
     \	'or': 1,
     \	'print': 1,
     \	'private': 1,
     \	'protected': 1,
     \	'public': 1,
     \	'require': 1,
     \	'require_once': 1,
     \	'return': 1,
     \	'static': 1,
     \	'switch': 1,
     \	'throw': 1,
     \	'trait': 1,
     \	'try': 1,
     \	'unset': 1,
     \	'use': 1,
     \	'var': 1,
     \	'while': 1,
     \	'xor': 1,
 	\ },
 \ 'python': {
     \	'False': 1,
     \	'None': 1,
     \	'True': 1,
     \	'and': 1,
     \	'as': 1,
     \	'assert': 1,
     \	'break': 1,
     \	'class': 1,
     \	'continue': 1,
     \	'def': 1,
     \	'del': 1,
     \	'elif': 1,
     \	'else': 1,
     \	'except': 1,
     \	'exec': 1,
     \	'finally': 1,
     \	'for': 1,
     \	'from': 1,
     \	'global': 1,
     \	'if': 1,
     \	'import': 1,
     \	'in': 1,
     \	'is': 1,
     \	'lambda': 1,
     \	'not': 1,
     \	'or': 1,
     \	'pass': 1,
     \	'print': 1,
     \	'raise': 1,
     \	'return': 1,
     \	'try': 1,
     \	'while': 1,
     \	'with': 1,
     \	'yield': 1,
 	\ },
 \ 'coffee': {
     \	'break': 1,
     \	'by': 1,
     \	'catch': 1,
     \	'class': 1,
     \	'continue': 1,
     \	'debugger': 1,
     \	'delete': 1,
     \	'do': 1,
     \	'else': 1,
     \	'extends': 1,
     \	'false': 1,
     \	'finally': 1,
     \	'for': 1,
     \	'if': 1,
     \	'in': 1,
     \	'instanceof': 1,
     \	'loop': 1,
     \	'new': 1,
     \	'null': 1,
     \	'of': 1,
     \	'return': 1,
     \	'super': 1,
     \	'switch': 1,
     \	'then': 1,
     \	'this': 1,
     \	'throw': 1,
     \	'true': 1,
     \	'try': 1,
     \	'typeof': 1,
     \	'undefined': 1,
     \	'unless': 1,
     \	'until': 1,
     \	'when': 1,
     \	'while': 1,
     \ },
 \ 'c': {
     \	'auto': 1,
     \	'break': 1,
     \	'case': 1,
     \	'char': 1,
     \	'const': 1,
     \	'continue': 1,
     \	'default': 1,
     \	'do': 1,
     \	'double': 1,
     \	'else': 1,
     \	'enum': 1,
     \	'extern': 1,
     \	'float': 1,
     \	'for': 1,
     \	'goto': 1,
     \	'if': 1,
     \	'int': 1,
     \	'long': 1,
     \	'register': 1,
     \	'return': 1,
     \	'short': 1,
     \	'signed': 1,
     \	'sizeof': 1,
     \	'static': 1,
     \	'struct': 1,
     \	'switch': 1,
     \	'typedef': 1,
     \	'union': 1,
     \	'unsigned': 1,
     \	'void': 1,
     \	'volatile': 1,
     \	'while': 1,
 	\ },
 \ 'cpp': {
     \	'alignas': 1,
     \	'alignof': 1,
     \	'auto': 1,
     \	'bool': 1,
     \	'break': 1,
     \	'case': 1,
     \	'char': 1,
     \	'char16_t': 1,
     \	'char32_t': 1,
     \	'class': 1,
     \	'const': 1,
     \	'const_cast': 1,
     \	'constexpr': 1,
     \	'continue': 1,
     \	'decltype': 1,
     \	'default': 1,
     \	'delete': 1,
     \	'do': 1,
     \	'double': 1,
     \	'dynamic_cast': 1,
     \	'else': 1,
     \	'enum': 1,
     \	'explicit': 1,
     \	'extern': 1,
     \	'false': 1,
     \	'float': 1,
     \	'for': 1,
     \	'friend': 1,
     \	'goto': 1,
     \	'if': 1,
     \	'inline': 1,
     \	'int': 1,
     \	'long': 1,
     \	'mutable': 1,
     \	'namespace': 1,
     \	'new': 1,
     \	'noexcept': 1,
     \	'nullptr': 1,
     \	'operator': 1,
     \	'private': 1,
     \	'protected': 1,
     \	'public': 1,
     \	'register': 1,
     \	'reinterpret_cast': 1,
     \	'return': 1,
     \	'short': 1,
     \	'signed': 1,
     \	'sizeof': 1,
     \	'static': 1,
     \	'static_assert': 1,
     \	'static_cast': 1,
     \	'struct': 1,
     \	'switch': 1,
     \	'template': 1,
     \	'this': 1,
     \	'thread_local': 1,
     \	'throw': 1,
     \	'true': 1,
     \	'try': 1,
     \	'typedef': 1,
     \	'typeid': 1,
     \	'typename': 1,
     \	'union': 1,
     \	'unsigned': 1,
     \	'using': 1,
     \	'virtual': 1,
     \	'void': 1,
     \	'volatile': 1,
     \	'wchar_t': 1,
     \	'while': 1,
 	\ },
 \ 'java': {
     \ 'abstract': 1,
     \ 'assert': 1,
     \ 'boolean': 1,
     \ 'break': 1,
     \ 'byte': 1,
     \ 'case': 1,
     \ 'catch': 1,
     \ 'char': 1,
     \ 'class': 1,
     \ 'const': 1,
     \ 'continue': 1,
     \ 'default': 1,
     \ 'do': 1,
     \ 'double': 1,
     \ 'else': 1,
     \ 'enum': 1,
     \ 'extends': 1,
     \ 'final': 1,
     \ 'finally': 1,
     \ 'float': 1,
     \ 'for': 1,
     \ 'goto': 1,
     \ 'if': 1,
     \ 'implements': 1,
     \ 'import': 1,
     \ 'instanceof': 1,
     \ 'int': 1,
     \ 'interface': 1,
     \ 'long': 1,
     \ 'native': 1,
     \ 'new': 1,
     \ 'package': 1,
     \ 'private': 1,
     \ 'protected': 1,
     \ 'public': 1,
     \ 'return': 1,
     \ 'short': 1,
     \ 'static': 1,
     \ 'strictfp': 1,
     \ 'super': 1,
     \ 'switch': 1,
     \ 'synchronized': 1,
     \ 'this': 1,
     \ 'throw': 1,
     \ 'throws': 1,
     \ 'transient': 1,
     \ 'try': 1,
     \ 'void': 1,
     \ 'volatile': 1,
     \ 'while': 1,
 	\ },
 \ 'rust': {
     \	'Self': 1,
     \	'as': 1,
     \	'bool': 1,
     \	'box': 1,
     \	'break': 1,
     \	'char': 1,
     \	'const': 1,
     \	'continue': 1,
     \	'crate': 1,
     \	'else': 1,
     \	'enum': 1,
     \	'extern': 1,
     \	'f32': 1,
     \	'f64': 1,
     \	'fn': 1,
     \	'for': 1,
     \	'i16': 1,
     \	'i32': 1,
     \	'i64': 1,
     \	'i8': 1,
     \	'if': 1,
     \	'impl': 1,
     \	'isize': 1,
     \	'let': 1,
     \	'loop': 1,
     \	'match': 1,
     \	'mod': 1,
     \	'move': 1,
     \	'mut': 1,
     \	'pub': 1,
     \	'ref': 1,
     \	'return': 1,
     \	'self': 1,
     \	'static': 1,
     \	'str': 1,
     \	'struct': 1,
     \	'super': 1,
     \	'trait': 1,
     \	'type': 1,
     \	'u16': 1,
     \	'u32': 1,
     \	'u64': 1,
     \	'u8': 1,
     \	'unsafe': 1,
     \	'use': 1,
     \	'usize': 1,
     \	'where': 1,
     \	'while': 1,
 	\ }
 \ }

function! semhl#config#blacklist()
	return exists('g:semhl_blacklist') ? g:semhl_blacklist : s:blacklist
endfunction
